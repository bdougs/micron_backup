#####################################################################
#	Macros
#####################################################################

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.EXTRUDER|int %}

    status_ready
    M106 S0 
    M140 S{bedtemp}                    ; set temperature
    M104 S200                          ; set extruder temp 
    RESETSPEEDS
    _CG28
    attach_probe_lock
    quad_gantry_level
    G28 Z
    G1 Y100
    clean_nozzle
    G1 Y100
    g1 X100
    calibrate_z
    dock_probe_unlock
    BED_MESH_PROFILE LOAD=default
    status_heating
    M190 S{bedtemp}                    ; set bed temperature and wait for it to be reached
    M109 S{hotendtemp}                 ; set temperature and wait for it to be reached
    G92 E0                             ; zero the extruder
    G90
    status_printing
    PURGE_LINE
    

   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X95 Y{max_y} F3600          ; park nozzle at rear
    M18
    status_finished
  
   

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(100) %}      #edit to your park position
    {% set y = params.Y|default(120) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    SDCARD_RESET_FILE
    CANCEL_PRINT_BASE
    M106 S0
    M18

####################### AUTOMATED MACROS ##################################

[gcode_macro PURGE_LINE]
gcode:
    G0 Y3 X40                       ; go outside print area to front tang 
    G1 Z0.2 F500.0                  ; begin purge
    G92 E0.0
    G1 Z0.2
    G1 X80 E10.0 F500.0             ; purge line
    G92 E0.0   

[gcode_macro _CG28]
#Conditional G28 (home if not already homed)
gcode:
    status_homing
    {% if printer.toolhead.homed_axes == "xyz" %}
        M117 Printer homed
    {% else %}
        M117 Homing...
        G28
    {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute


[gcode_macro RESETSPEEDS]
gcode:
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}  ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity}

[gcode_macro ZCALDOWN]
gcode:
	{% set mm = params.MM|default(-0.05)|float %}
	
	TESTZ Z={mm}

[gcode_macro ZCALUP]
gcode:
	{% set mm = params.MM|default(0.05)|float %}
	
	TESTZ Z={mm}

[gcode_macro BMC]
gcode:
	BED_MESH_CALIBRATE

[gcode_macro standby]
gcode:
    status_off
    M117 Standby

#################### MANUAL MACROS ##################################

[gcode_macro pidtune_bed]
gcode:
    PID_CALIBRATE HEATER=heater_bed TARGET=100
    status_heating

[gcode_macro pidtune_hotend]
gcode:
    PID_CALIBRATE HEATER=extruder TARGET=255
    status_heating

[gcode_macro preheat]
gcode:
    M140 S100           ; set bed temperature
    M104 S200           ; set extruder temp
    G28 Y0 X0 Z0         ; home  
    G1 X60 Y60           ; move to center of bed
    M106 S255            ; set part fan 100%
    M18                  ; turn off steppers
    status_heating